version: '3.8'

services:
  hugo:
    image: klakegg/hugo:ext-alpine
    container_name: kaido-hugo-${VERSION:-1.0.0}
    volumes:
      - ./hugo:/src
      - hugo_public:/target
    environment:
      - HUGO_DESTINATION=/target
      - HUGO_BASEURL=${HUGO_BASEURL}
    command: ["hugo", "--minify", "--destination", "/target"]
    networks:
      - kaido-network

  nginx:
    image: nginx:alpine
    container_name: kaido-nginx-${VERSION:-1.0.0}
    ports:
      - "${NGINX_PORT_HTTP:-80}:80"
      - "${NGINX_PORT_HTTPS:-443}:443"
    volumes:
      - hugo_public:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - certbot_certs:/etc/letsencrypt:ro
      - certbot_www:/var/www/certbot:ro
    depends_on:
      - hugo
    restart: unless-stopped
    networks:
      - kaido-network

  certbot:
    image: certbot/certbot
    container_name: kaido-certbot-${VERSION:-1.0.0}
    volumes:
      - certbot_certs:/etc/letsencrypt
      - certbot_www:/var/www/certbot
      - ./certbot:/scripts
    command: /bin/sh -c "trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;"
    networks:
      - kaido-network

volumes:
  hugo_public:
    name: kaido-hugo-public-${VERSION:-1.0.0}
  certbot_certs:
    name: kaido-certbot-certs-${VERSION:-1.0.0}
  certbot_www:
    name: kaido-certbot-www-${VERSION:-1.0.0}

networks:
  kaido-network:
    name: kaido-network-${VERSION:-1.0.0}
    driver: bridge